#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main(int argc,char* argv[])
{
FILE *fp;
int sd,len,k,tsp;
char b[100];
char buff[100]={0};
struct sockaddr_in server,client;
sd=socket(AF_INET,SOCK_STREAM,0);
if(sd==-1)
printf("Error in socket creation\n");
else
printf("Socket creation successfull\n");
server.sin_family=AF_INET;
server.sin_addr.s_addr=INADDR_ANY;
server.sin_port=htons(atoi(argv[1]));
k=bind(sd,(struct sockaddr*)&server,sizeof(server));
if(k==-1)
printf("Error in binding\n");
len=sizeof(client);
k=listen(sd,5);
if(k==-1)
printf("Error in listening\n");
tsp=accept(sd,(struct sockaddr*)&client,&len);
if(tsp==-1)
printf("Error in temporary socket creation\n");
k=recv(tsp,b,100,0);
b[k]='\0';
if(k==-1)
printf("Error in receiving\n");
fp=fopen(b,"r");

if(fp==NULL)
k=send(tsp,"error",5,0);
else
{
while(fgets(b,100,fp)!=NULL)
{
strcat(buff,b);
}
k=send(tsp,buff,100,0);
if(k==-1)
printf("Error in sending");
else
k=send(tsp,"complete",100,0);

/*
while(fgets(b,100,fp))
{
k=send(tsp,b,100,0);
if(k==-1)
printf("Error in sending");
}
printf("%s\n",b);
k=send(tsp,"complete",100,0);
if(k==-1)
printf("Error in sending");
*/
} 
close(sd);
}
